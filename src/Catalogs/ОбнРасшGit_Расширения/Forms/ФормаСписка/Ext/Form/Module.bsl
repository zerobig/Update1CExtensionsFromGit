&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзмененыНастройкиАвтоматическогоОбновленияРасширения" Тогда
		УстановитьДоступность(Параметр.АдресСервера, Параметр.АдресРесурса);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)

	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		УстановитьДоступность(Элемент.ТекущиеДанные.АдресСервера, Элемент.ТекущиеДанные.АдресРесурса);
	Иначе
		УстановитьДоступность("", "");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьУстановленнымиРасширениями(Команда)
	ЗаполнитьУстановленнымиРасширениямиНаСервере();
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		
		Результат = ОбновитьРасширениеНаСервере(Элементы.Список.ТекущиеДанные.Наименование,
			Элементы.Список.ТекущиеДанные.АдресСервера,
			Элементы.Список.ТекущиеДанные.АдресРесурса,
			Элементы.Список.ТекущиеДанные.ИмяПользователя,
			Элементы.Список.ТекущиеДанные.Пароль);
			
		Если Результат Тогда
			Сообщить("Расширение успешно обновлено.");
		Иначе
			Сообщить("Во время обновления расширения возникли проблемы. Подробности смотреть в журнале регистрации.");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьРасширениеНаСервере(НаименованиеРасширения, АдресСервера, АдресРесурса, ИмяПользователя, Пароль)
	
	УстановитьПривилегированныйРежим(Истина);
	Расширения = РасширенияКонфигурации.Получить(Новый Структура("Имя", НаименованиеРасширения));
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Расширения.Количество() > 0 Тогда
		
		Возврат ОбнРасшGit_Расширения.ОбновитьРасширение(Расширения[0], АдресСервера, АдресРесурса, ИмяПользователя, Пароль);
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьУстановленнымиРасширениямиНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	Расширения = РасширенияКонфигурации.Получить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Расширения.Ссылка КАК Ссылка,
	|	Расширения.Наименование КАК Наименование,
	|	Расширения.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Справочник.ОбнРасшGit_Расширения КАК Расширения";
	
	ТаблицаРасширений = Запрос.Выполнить().Выгрузить();
	
	ИдентификаторыРасширений = Новый Массив;
	Для каждого Расширение Из Расширения Цикл
		ИдентификаторыРасширений.Добавить(Расширение.Имя);
		
		РасширенияВСправочнике = ТаблицаРасширений.НайтиСтроки(Новый Структура("Наименование", Расширение.Имя));
		Если РасширенияВСправочнике.Количество() = 0 Тогда
			РасширениеОбъект = Справочники.ОбнРасшGit_Расширения.СоздатьЭлемент();
			РасширениеОбъект.Наименование = Расширение.Имя;
			РасширениеОбъект.Записать();
		ИначеЕсли РасширенияВСправочнике[0].ПометкаУдаления Тогда
			РасширениеОбъект = РасширенияВСправочнике[0].Ссылка.ПолучитьОбъект();
			РасширениеОбъект.УстановитьПометкуУдаления(Ложь);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Расширение Из ТаблицаРасширений Цикл
		Если ИдентификаторыРасширений.Найти(Расширение.Наименование) = Неопределено Тогда
			РасширениеОбъект = Расширение.Ссылка.ПолучитьОбъект();
			РасширениеОбъект.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность(АдресСервера, АдресРесурса)
	
	Если ПустаяСтрока(АдресСервера) ИЛИ
		ПустаяСтрока(АдресРесурса) Тогда
		
		Элементы.ФормаОбновить.Доступность = Ложь;
	Иначе
		Элементы.ФормаОбновить.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры
